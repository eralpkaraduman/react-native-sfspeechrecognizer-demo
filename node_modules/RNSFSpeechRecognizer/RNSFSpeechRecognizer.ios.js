/**
 * @providesModule RNSFSpeechRecognizer
 * @flow
 */
'use strict';

import {
  NativeModules,
  NativeAppEventEmitter,
  DeviceEventEmitter,
  processColor
} from 'react-native';
const NativeRNSFSpeechRecognizer = NativeModules.RNSFSpeechRecognizer;

/**
 * High-level docs for the RNSFSpeechRecognizer iOS API can be written here.
 */

const RNSFSpeechRecognizer = {
  // Microphone permissions
  isMicrophonePermissionGranted: function() {
    return new Promise(
      resolve => NativeRNSFSpeechRecognizer.isMicrophonePermissionGranted(resolve)
    )
  },
  isMicrophonePermissionDenied: function() {
    return new Promise(
      resolve => NativeRNSFSpeechRecognizer.isMicrophonePermissionDenied(resolve)
    )
  },
  requestMicrophonePermission: function() {
    return new Promise(
      resolve => NativeRNSFSpeechRecognizer.requestMicrophonePermission(resolve)
    )
  },
  // Speech Recognition permissions
  isSpeechRecognitionPermissionGranted: function() {
    return new Promise(
      resolve => NativeRNSFSpeechRecognizer.isSpeechRecognitionPermissionGranted(resolve)
    )
  },
  isSpeechRecognitionPermissionDenied: function() {
    return new Promise(
      resolve => NativeRNSFSpeechRecognizer.isSpeechRecognitionPermissionDenied(resolve)
    )
  },
  requestSpeechRecognitionPermission: function() {
    return new Promise(resolve => NativeRNSFSpeechRecognizer.requestSpeechRecognitionPermission(resolve))
  },



  // resolve => NativeRNSFSpeechRecognizer.requestSpeechRecognitionPermission(granted => {
      //   resolve(granted);
      // })
};

module.exports = RNSFSpeechRecognizer;
